Warnings:
---------
1 shift/reduce conflict 
Conflicts:
----------
State 12 contains 1 shift/reduce conflict

Rules:
------
0:	$start -> p $end
1:	p -> /* empty */
2:	p -> p c
3:	c -> expr
4:	c -> RIGHT
5:	c -> LEFT
6:	expr -> '(' expr ')'
7:	expr -> expr '-' expr
8:	expr -> NUM

States:
-------
State 0:

	$start -> . p $end	(Rule 0)

	$default	reduce using rule 1 (p)

	p	go to state 1

State 1:

	$start -> p . $end	(Rule 0)
	p -> p . c	(Rule 2)

	$end	shift, and go to state 3
	'('	shift, and go to state 4
	LEFT	shift, and go to state 7
	NUM	shift, and go to state 2
	RIGHT	shift, and go to state 8

	c	go to state 5
	expr	go to state 6

State 2:

	expr -> NUM .	(Rule 8)

	$default	reduce using rule 8 (expr)

State 3:

	$start -> p $end .	(Rule 0)

	$default	accept

State 4:

	expr -> '(' . expr ')'	(Rule 6)

	'('	shift, and go to state 4
	NUM	shift, and go to state 2

	expr	go to state 9

State 5:

	p -> p c .	(Rule 2)

	$default	reduce using rule 2 (p)

State 6:

	c -> expr .	(Rule 3)
	expr -> expr . '-' expr	(Rule 7)

	'-'	shift, and go to state 10

	$default	reduce using rule 3 (c)

State 7:

	c -> LEFT .	(Rule 5)

	$default	reduce using rule 5 (c)

State 8:

	c -> RIGHT .	(Rule 4)

	$default	reduce using rule 4 (c)

State 9:

	expr -> '(' expr . ')'	(Rule 6)
	expr -> expr . '-' expr	(Rule 7)

	')'	shift, and go to state 11
	'-'	shift, and go to state 10

State 10:

	expr -> expr '-' . expr	(Rule 7)

	'('	shift, and go to state 4
	NUM	shift, and go to state 2

	expr	go to state 12

State 11:

	expr -> '(' expr ')' .	(Rule 6)

	$default	reduce using rule 6 (expr)

State 12:

	expr -> expr . '-' expr	(Rule 7)
	expr -> expr '-' expr .	(Rule 7)

	'-'	shift, and go to state 10

	'-'	[reduce using rule 7 (expr)]
	$default	reduce using rule 7 (expr)


Summary:
--------
Number of rules         : 9
Number of terminals     : 7
Number of non-terminals : 4
Number of states        : 13
