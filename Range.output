Conflicts:
----------
Conflict in state 15 between rule 4 and token '-' resolved as reduce.
Conflict in state 15 between rule 4 and token '+' resolved as reduce.
Conflict in state 15 between rule 4 and token '/' resolved as shift.
Conflict in state 15 between rule 4 and token ',' resolved as reduce.
Conflict in state 15 between rule 4 and token '*' resolved as shift.
Conflict in state 17 between rule 5 and token '-' resolved as reduce.
Conflict in state 17 between rule 5 and token '+' resolved as reduce.
Conflict in state 17 between rule 5 and token '/' resolved as reduce.
Conflict in state 17 between rule 5 and token ',' resolved as reduce.
Conflict in state 17 between rule 5 and token '*' resolved as reduce.
Conflict in state 18 between rule 3 and token '-' resolved as reduce.
Conflict in state 18 between rule 3 and token '+' resolved as reduce.
Conflict in state 18 between rule 3 and token '/' resolved as shift.
Conflict in state 18 between rule 3 and token ',' resolved as reduce.
Conflict in state 18 between rule 3 and token '*' resolved as shift.
Conflict in state 19 between rule 7 and token '-' resolved as shift.
Conflict in state 19 between rule 7 and token '+' resolved as shift.
Conflict in state 19 between rule 7 and token '/' resolved as shift.
Conflict in state 19 between rule 7 and token ',' resolved as reduce.
Conflict in state 19 between rule 7 and token '*' resolved as shift.
Conflict in state 20 between rule 6 and token '-' resolved as reduce.
Conflict in state 20 between rule 6 and token '+' resolved as reduce.
Conflict in state 20 between rule 6 and token '/' resolved as reduce.
Conflict in state 20 between rule 6 and token ',' resolved as reduce.
Conflict in state 20 between rule 6 and token '*' resolved as reduce.

Rules:
------
0:	$start -> range $end
1:	range -> expr '..' expr ';'
2:	expr -> '(' expr ')'
3:	expr -> expr '+' expr
4:	expr -> expr '-' expr
5:	expr -> expr '*' expr
6:	expr -> expr '/' expr
7:	expr -> expr ',' expr
8:	expr -> ID
9:	expr -> NUM

States:
-------
State 0:

	$start -> . range $end	(Rule 0)

	'('	shift, and go to state 3
	ID	shift, and go to state 2
	NUM	shift, and go to state 1

	expr	go to state 4
	range	go to state 5

State 1:

	expr -> NUM .	(Rule 9)

	$default	reduce using rule 9 (expr)

State 2:

	expr -> ID .	(Rule 8)

	$default	reduce using rule 8 (expr)

State 3:

	expr -> '(' . expr ')'	(Rule 2)

	'('	shift, and go to state 3
	ID	shift, and go to state 2
	NUM	shift, and go to state 1

	expr	go to state 6

State 4:

	range -> expr . '..' expr ';'	(Rule 1)
	expr -> expr . '+' expr	(Rule 3)
	expr -> expr . '-' expr	(Rule 4)
	expr -> expr . '*' expr	(Rule 5)
	expr -> expr . '/' expr	(Rule 6)
	expr -> expr . ',' expr	(Rule 7)

	'*'	shift, and go to state 9
	'+'	shift, and go to state 10
	','	shift, and go to state 11
	'-'	shift, and go to state 7
	'..'	shift, and go to state 8
	'/'	shift, and go to state 12

State 5:

	$start -> range . $end	(Rule 0)

		shift, and go to state 13

State 6:

	expr -> '(' expr . ')'	(Rule 2)
	expr -> expr . '+' expr	(Rule 3)
	expr -> expr . '-' expr	(Rule 4)
	expr -> expr . '*' expr	(Rule 5)
	expr -> expr . '/' expr	(Rule 6)
	expr -> expr . ',' expr	(Rule 7)

	')'	shift, and go to state 14
	'*'	shift, and go to state 9
	'+'	shift, and go to state 10
	','	shift, and go to state 11
	'-'	shift, and go to state 7
	'/'	shift, and go to state 12

State 7:

	expr -> expr '-' . expr	(Rule 4)

	'('	shift, and go to state 3
	ID	shift, and go to state 2
	NUM	shift, and go to state 1

	expr	go to state 15

State 8:

	range -> expr '..' . expr ';'	(Rule 1)

	'('	shift, and go to state 3
	ID	shift, and go to state 2
	NUM	shift, and go to state 1

	expr	go to state 16

State 9:

	expr -> expr '*' . expr	(Rule 5)

	'('	shift, and go to state 3
	ID	shift, and go to state 2
	NUM	shift, and go to state 1

	expr	go to state 17

State 10:

	expr -> expr '+' . expr	(Rule 3)

	'('	shift, and go to state 3
	ID	shift, and go to state 2
	NUM	shift, and go to state 1

	expr	go to state 18

State 11:

	expr -> expr ',' . expr	(Rule 7)

	'('	shift, and go to state 3
	ID	shift, and go to state 2
	NUM	shift, and go to state 1

	expr	go to state 19

State 12:

	expr -> expr '/' . expr	(Rule 6)

	'('	shift, and go to state 3
	ID	shift, and go to state 2
	NUM	shift, and go to state 1

	expr	go to state 20

State 13:

	$start -> range $end .	(Rule 0)

	$default	accept

State 14:

	expr -> '(' expr ')' .	(Rule 2)

	$default	reduce using rule 2 (expr)

State 15:

	expr -> expr . '+' expr	(Rule 3)
	expr -> expr . '-' expr	(Rule 4)
	expr -> expr '-' expr .	(Rule 4)
	expr -> expr . '*' expr	(Rule 5)
	expr -> expr . '/' expr	(Rule 6)
	expr -> expr . ',' expr	(Rule 7)

	'*'	shift, and go to state 9
	'/'	shift, and go to state 12

	')'	reduce using rule 4 (expr)
	'+'	reduce using rule 4 (expr)
	','	reduce using rule 4 (expr)
	'-'	reduce using rule 4 (expr)
	'..'	reduce using rule 4 (expr)
	';'	reduce using rule 4 (expr)

State 16:

	range -> expr '..' expr . ';'	(Rule 1)
	expr -> expr . '+' expr	(Rule 3)
	expr -> expr . '-' expr	(Rule 4)
	expr -> expr . '*' expr	(Rule 5)
	expr -> expr . '/' expr	(Rule 6)
	expr -> expr . ',' expr	(Rule 7)

	'*'	shift, and go to state 9
	'+'	shift, and go to state 10
	','	shift, and go to state 11
	'-'	shift, and go to state 7
	'/'	shift, and go to state 12
	';'	shift, and go to state 21

State 17:

	expr -> expr . '+' expr	(Rule 3)
	expr -> expr . '-' expr	(Rule 4)
	expr -> expr . '*' expr	(Rule 5)
	expr -> expr '*' expr .	(Rule 5)
	expr -> expr . '/' expr	(Rule 6)
	expr -> expr . ',' expr	(Rule 7)

	')'	reduce using rule 5 (expr)
	'*'	reduce using rule 5 (expr)
	'+'	reduce using rule 5 (expr)
	','	reduce using rule 5 (expr)
	'-'	reduce using rule 5 (expr)
	'..'	reduce using rule 5 (expr)
	'/'	reduce using rule 5 (expr)
	';'	reduce using rule 5 (expr)

State 18:

	expr -> expr . '+' expr	(Rule 3)
	expr -> expr '+' expr .	(Rule 3)
	expr -> expr . '-' expr	(Rule 4)
	expr -> expr . '*' expr	(Rule 5)
	expr -> expr . '/' expr	(Rule 6)
	expr -> expr . ',' expr	(Rule 7)

	'*'	shift, and go to state 9
	'/'	shift, and go to state 12

	')'	reduce using rule 3 (expr)
	'+'	reduce using rule 3 (expr)
	','	reduce using rule 3 (expr)
	'-'	reduce using rule 3 (expr)
	'..'	reduce using rule 3 (expr)
	';'	reduce using rule 3 (expr)

State 19:

	expr -> expr . '+' expr	(Rule 3)
	expr -> expr . '-' expr	(Rule 4)
	expr -> expr . '*' expr	(Rule 5)
	expr -> expr . '/' expr	(Rule 6)
	expr -> expr . ',' expr	(Rule 7)
	expr -> expr ',' expr .	(Rule 7)

	'*'	shift, and go to state 9
	'+'	shift, and go to state 10
	'-'	shift, and go to state 7
	'/'	shift, and go to state 12

	')'	reduce using rule 7 (expr)
	','	reduce using rule 7 (expr)
	'..'	reduce using rule 7 (expr)
	';'	reduce using rule 7 (expr)

State 20:

	expr -> expr . '+' expr	(Rule 3)
	expr -> expr . '-' expr	(Rule 4)
	expr -> expr . '*' expr	(Rule 5)
	expr -> expr . '/' expr	(Rule 6)
	expr -> expr '/' expr .	(Rule 6)
	expr -> expr . ',' expr	(Rule 7)

	')'	reduce using rule 6 (expr)
	'*'	reduce using rule 6 (expr)
	'+'	reduce using rule 6 (expr)
	','	reduce using rule 6 (expr)
	'-'	reduce using rule 6 (expr)
	'..'	reduce using rule 6 (expr)
	'/'	reduce using rule 6 (expr)
	';'	reduce using rule 6 (expr)

State 21:

	range -> expr '..' expr ';' .	(Rule 1)

	$default	reduce using rule 1 (range)


Summary:
--------
Number of rules         : 10
Number of terminals     : 12
Number of non-terminals : 3
Number of states        : 22
